name: ci
on: [push, pull_request]

permissions:
  contents: read

jobs:
  build-and-test:
    name:  >-
      CI
      ${{ matrix.os }}
      ${{ matrix.compiler }}
      ${{ matrix.optimized && 'release' || 'debug' }}
      ${{ matrix.build_shared_lib && 'shared_library' || 'static_library' }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        compiler: [clang, gcc, msvc]
        os: [ubuntu-latest, macos-latest, windows-latest]
        optimized: [true, false]
        build_shared_lib: [true, false]
        exclude:
        # MSVC only works on Windows.
        - os: ubuntu-latest
          compiler: msvc
        - os: macos-latest
          compiler: msvc
        # Not testing with GCC on macOS.
        - os: macos-latest
          compiler: gcc
        # Only testing with MSVC on Windows.
        - os: windows-latest
          compiler: clang
        - os: windows-latest
          compiler: gcc
        include:
        - compiler: clang
          CC: clang
          CXX: clang++
        - compiler: gcc
          CC: gcc
          CXX: g++

    env:
      CMAKE_BUILD_DIR: ${{ github.workspace }}/build
      CMAKE_BUILD_TYPE: ${{ matrix.optimized && 'RelWithDebInfo' || 'Debug' }}
      BUILD_SHARED_LIBS: ${{ matrix.build_shared_lib && 'ON' || 'OFF' }}
      CC: ${{ matrix.CC }}
      CXX: ${{ matrix.CXX }}
      BINARY_SUFFIX: ${{ startsWith(matrix.os, 'windows') && '.exe' || '' }}
      BINARY_PATH: >-
        ${{ format(
        startsWith(matrix.os, 'windows') && '{0}\build\{1}\' || '{0}/build/',
        github.workspace,
        matrix.optimized && 'RelWithDebInfo' || 'Debug') }}

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Generate build config
      run: >-
        cmake -S "${{ github.workspace }}" -B "${{ env.CMAKE_BUILD_DIR }}"
        -DCMAKE_BUILD_TYPE=${{ env.CMAKE_BUILD_TYPE }}
        -DBUILD_SHARED_LIBS=${{ env.BUILD_SHARED_LIBS }}
        -DCMAKE_INSTALL_PREFIX=${{ runner.temp }}/install_test/

    - name: Build
      run: >-
        cmake --build "${{ env.CMAKE_BUILD_DIR }}"
        --config "${{ env.CMAKE_BUILD_TYPE }}"

    - name: Test CMake installation
      run: cmake --build "${{ env.CMAKE_BUILD_DIR }}" --target install
